name: Auto test

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.8 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Cache python venv
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: ./.venv/
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-
        if: ${{ !env.ACT }}
      - name: Cache local Maven repository
        uses: actions/cache@v2
        id: cache-mvn
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/java/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
        if: ${{ !env.ACT }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ ! -d "./.venv" ]; then
            python -m venv ./.venv 
          fi
          pip install -r requirements_test.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - name: Build UDF jar
        run: |
          mvn clean package -f java/pom.xml
      - name: Test with setup
        run: |
          . ./.venv/bin/activate && python setup.py test