name: Publish to S3

on:
  push:
    tags:
      - 's3-*'

jobs:
  build-n-publish-to-s3:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.8 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Cache python pip
        uses: actions/cache@v2
        id: cache-pip
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache local Maven repository
        uses: actions/cache@v2
        id: cache-mvn
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/java/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build the UDF jar
        id: build-udf-jar
        run: |
          mvn clean package -f java/pom.xml -DskipTests
          echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec -f java/pom.xml)

      - uses: zdurham/s3-upload-github-action@master
        name: Upload jar to s3
        with:
          args: --acl public-read
        env:
          FILE: ./java/target/blockchain-spark-${{ steps.build-udf-jar.outputs.version }}.jar
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          S3_KEY: ${{ secrets.S3_JAR_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build a binary wheel and a source tarball
        id: build-egg
        run: |
          python setup.py sdist
          echo ::set-output name=version::$(python setup.py --version)

      - uses: zdurham/s3-upload-github-action@master
        name: Upload egg to s3
        with:
          args: --acl public-read
        env:
          FILE: ./dist/blockchain_spark-${{ steps.build-egg.outputs.version }}-py${{ matrix.python-version }}.egg
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          S3_KEY: ${{ secrets.S3_EGG_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
